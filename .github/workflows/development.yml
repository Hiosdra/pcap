name: Build and Test

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build-and-test:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-10.15', 'ubuntu-16.04']
        java: [8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - uses: actions/checkout@v2
        with:
          fetch-depth: 1


      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64

      - name: actions/setup-panama
        run: |
          sudo mkdir -p /usr/local/jvm
          sudo chown -R $(whoami) /usr/local/jvm
          ./.github/scripts/install-jdk.sh -f panama -w /tmp -t /usr/local/jvm/panama -v
        if: matrix.os == 'macos-10.15'

      - name: actions/setup-panama
        run: |
          sudo mkdir -p /usr/local/jvm
          sudo chown -R $(whoami) /usr/local/jvm
          ./.github/scripts/install-jdk.sh -f panama -w /tmp -t /usr/local/jvm/panama -v
          sudo find /usr/local/jvm/panama/lib/ -iname "libjli*"
          sudo cp /usr/local/jvm/panama/lib/libjli*.so /usr/lib
        if: matrix.os == 'ubuntu-16.04'


      - name: actions/setup-pcap
        run: |
          find /usr/lib/ -iname "libpcap*"
          mkdir -p ~/Library/Java/Extensions
          cp -rf /usr/lib/libpcap.* ~/Library/Java/Extensions
          sudo chown $(whoami):admin /dev/bpf*
        if: matrix.os == 'macos-10.15'

      - name: actions/setup-pcap
        run: |
          sudo apt-get update && sudo apt-get -y install libpcap0.8 libcap2-bin
          sudo setcap cap_net_raw,cap_net_admin=eip /usr/local/jvm/panama/bin/java
          sudo find /usr/lib/ -iname "libpcap*"
          sudo cp /usr/lib/x86_64-linux-gnu/libpcap.so.0.8 /usr/lib/libpcap.so
        if: matrix.os == 'ubuntu-16.04'

      - name: actions/setup-pcap
        run: |
          choco install nmap
        if: matrix.os == 'windows-latest'


      - name: Build (Mac OS)
        run: |
          export JAVA_HOME_8=${JAVA_HOME}
          export JAVA_HOME=/usr/local/jvm/panama
          echo "JAVA_HOME_8 = $JAVA_HOME_8"
          echo "JAVA_HOME = $JAVA_HOME"
          ./mvnw -B -t .mvn/toolchains.xml clean package jacoco:report-aggregate sonar:sonar -Pcoverage -Pformat -Psonar -Djava.library.path=/usr/lib -Dsonar.login="${{ secrets.sonar_token }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'macos-10.15'

      - name: Build (Ubuntu)
        run: |
          export JAVA_HOME_8=${JAVA_HOME}
          export JAVA_HOME=/usr/local/jvm/panama
          echo "JAVA_HOME_8 = $JAVA_HOME_8"
          echo "JAVA_HOME = $JAVA_HOME"
          ./mvnw -B -t .mvn/toolchains.xml clean package jacoco:report-aggregate -Pcoverage -Pformat -Djava.library.path=/usr/lib
        if: matrix.os == 'ubuntu-16.04'